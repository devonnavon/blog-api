{"version":3,"sources":["../../src/routes/post.js"],"names":["router","get","req","res","context","models","Post","find","posts","send","findById","params","postId","post","put","error","next","BadRequestError","title","body","published","save","create","user","id","remove"],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport { BadRequestError } from '../utils/errors';\n\nconst router = Router();\n\nrouter.get('/', async (req, res) => {\n  const posts = await req.context.models.Post.find();\n  return res.send(posts);\n});\n\nrouter.get('/:postId', async (req, res) => {\n  const post = await req.context.models.Post.findById(\n    req.params.postId,\n  );\n  return res.send(post);\n});\n\nrouter.put('/:postId', async (req, res) => {\n  const post = await req.context.models.Post.findById(\n    req.params.postId,\n  ).catch((error) => next(new BadRequestError(error)));\n  post.title = req.body.title;\n  post.body = req.body.body;\n  post.published = req.body.published;\n  await post.save();\n  // .catch((error) => next(new BadRequestError(error)));\n  return res.send(post);\n});\n\nrouter.post('/', async (req, res, next) => {\n  const post = await req.context.models.Post.create({\n    title: req.body.title,\n    body: req.body.body,\n    published: req.body.published,\n    user: req.user.id,\n  }).catch((error) => next(new BadRequestError(error)));\n\n  return res.send(post);\n});\n\nrouter.delete('/:postId', async (req, res) => {\n  const post = await req.context.models.Post.findById(\n    req.params.postId,\n  ).catch((error) => next(new BadRequestError(error)));\n\n  if (post) {\n    await post.remove();\n  }\n\n  return res.send(post);\n});\n\nexport default router;\n\n//curl -X POST -H \"Content-Type:application/json\" http://localhost:3000/posts -d '{\"title\":\"yo yo yo yo\", \"body\":\"seriously though yo\", \"published\":false}'\n"],"file":"post.js"}